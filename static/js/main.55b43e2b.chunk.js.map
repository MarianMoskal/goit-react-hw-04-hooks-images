{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","API/fetchData.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["SearchForm","styled","form","Header","header","Button","button","Label","label","Input","input","Searchbar","onChange","onSubmit","type","className","id","autoComplete","autoFocus","placeholder","Image","img","Item","li","ImageGalleryItem","p","alt","onClick","largeImageURL","e","src","Gallery","ul","Spinner","div","ImageGallery","hits","visible","onSelect","map","webformatURL","tags","color","height","width","timeout","LoadButton","axios","defaults","baseURL","params","key","per_page","image_type","orientation","fetchData","state","a","query","page","q","Overlay","ModalEl","Modal","selectedImage","closeModal","handleKeyPress","useCallback","useEffect","window","addEventListener","document","body","removeEventListener","target","nodeName","Container","App","data","loaderVisible","handleInput","setState","value","preventDefault","toggleLoaderVisible","textInput","handleFetchResponse","loadMore","setTimeout","then","error","console","log","alert","handleSelectedImage","handleCloseModal","notify","toast","warn","theme","prevProps","prevState","this","ruleForScrollTo","ruleForNotify","length","totalHits","scrollTo","top","documentElement","scrollHeight","behavior","rule","position","autoClose","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"6RAEMA,EAAaC,IAAOC,KAAV,kLAUVC,EAASF,IAAOG,OAAV,ocAmBNC,EAASJ,IAAOK,OAAV,uaAmBNC,EAAQN,IAAOO,MAAV,iNAYLC,EAAQR,IAAOS,MAAV,qR,OC5BIC,I,IAAAA,EA9Bf,YAA4C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAE7B,OACE,cAAC,WAAD,UACE,cAACV,EAAD,UACE,eAACH,EAAD,CAAYa,SAAUA,EAAtB,UACE,cAACR,EAAD,CAAQS,KAAK,SAAb,SACE,cAACP,EAAD,uBAGF,cAACE,EAAD,CACEM,UAAU,mBACVC,GAAG,YACHF,KAAK,OACLF,SAAUA,EACVK,aAAa,MACbC,WAAS,EACTC,YAAY,qC,yBCnBlBC,EAAQnB,IAAOoB,IAAV,wNAYLC,EAAOrB,IAAOsB,GAAV,sLCYKC,I,IAAAA,EAtBf,SAA0BC,GACxB,IAAQC,EAAgCD,EAAhCC,IAAKC,EAA2BF,EAA3BE,QAASC,EAAkBH,EAAlBG,cAEtB,OACE,cAAC,WAAD,UACE,cAACN,EAAD,UACE,cAACF,EAAD,CACEO,QAAS,SAACE,GAAD,OAAOF,EAAQC,EAAeF,IACvCI,IAAKF,EACLF,IAAKA,SCXTK,EAAU9B,IAAO+B,GAAV,kSAaPC,EAAUhC,IAAOiC,IAAV,mDC+BEC,I,EAAAA,EAvCf,SAAsBV,GACpB,IAAQW,EAA4BX,EAA5BW,KAAMC,EAAsBZ,EAAtBY,QAASC,EAAab,EAAba,SAEvB,OACE,qCACE,cAACP,EAAD,UACGK,EAAKG,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMb,EAAvB,EAAuBA,cAAeZ,EAAtC,EAAsCA,GAAtC,OACR,cAAC,EAAD,CACEW,QAASW,EAETV,cAAeA,EACfE,IAAKU,EACLd,IAAKe,GALP,UAEUzB,EAFV,YAEgBwB,SAQnBH,GACC,cAACJ,EAAD,UACE,cAAC,IAAD,CAEEnB,KAAK,YACL4B,MAAM,SACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,YC9BfC,EAAa7C,IAAOK,OAAV,6mBCcDD,MAZf,SAAgBoB,GACd,OACE,cAACqB,EAAD,CAAYhC,KAAK,SAASa,QAASF,EAAEE,QAArC,wB,yCCDJoB,IAAMC,SAASC,QAHH,2BAIZF,IAAMC,SAASE,OAAS,CACtBC,IAJc,qCAKdC,SAAU,GACVC,WAAY,QACZC,YAAa,cAGf,I,IAAMC,EAAS,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACRC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,KADC,SAGHZ,IAAM,GAAI,CACrBG,OAAQ,CAAEU,EAAGF,EAAOC,UAJN,mFAAH,sDAQAJ,ICnBTM,EAAU5D,IAAOiC,IAAV,2OAaP4B,EAAU7D,IAAOiC,IAAV,sLCiDE6B,I,EAAAA,EA5Df,YAA+C,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WAIzBC,EAAiBC,uBAAY,SAACtC,GACnB,WAAVA,EAAEsB,KACJc,MAED,CAACA,IAIJG,qBAAU,WAGR,OAFEC,OAAOC,iBAAiB,UAAWJ,GACnCK,SAASC,KAAKzD,UAAY,qBACrB,WACLsD,OAAOI,oBAAoB,UAAWP,GACtCK,SAASC,KAAKzD,UAAY,MAE3B,CAACmD,IAoBL,IAMWpC,EAAakC,EAAblC,IAAKJ,EAAQsC,EAARtC,IACb,OACE,cAACmC,EAAD,CAASlC,QARa,SAACE,GACC,QAAtBA,EAAE6C,OAAOC,UACXV,KAMA,SACE,cAACH,EAAD,UACE,qBAAKhC,IAAKA,EAAKJ,IAAKA,S,SCnDxBkD,I,MAAY3E,IAAOiC,IAAV,sDCQT2C,G,4MACJrB,MAAQ,CACNsB,KAAM,GACN1C,KAAM,GACNsB,MAAO,GACPC,KAAM,EACNK,cAAe,KACfe,eAAe,G,EA0BjBC,YAAc,SAACnD,GACb,EAAKoD,SAAS,CAAEvB,MAAO7B,EAAE6C,OAAOQ,S,EAGlCrE,SAAW,SAACgB,GACVA,EAAEsD,iBAEF,EAAKC,sBACLvD,EAAE6C,OAAOW,UAAUH,MAAQ,GAE3B,EAAKD,SAAS,CAAEtB,KAAM,EAAGvB,KAAM,KAAM,WACnC,EAAKkD,0B,EAITC,SAAW,SAAC1D,GACV,EAAKuD,sBACLI,WACE,EAAKP,SAAS,CAAEtB,KAAM,EAAKH,MAAMG,KAAO,IAAK,WAC3C,EAAK2B,yBAEP,M,EAIJA,oBAAsB,WACpB,IACE/B,EAAU,EAAKC,OAAOiC,MAAK,YAAe,IAAZX,EAAW,EAAXA,KAE5B,EAAKG,UAAS,SAACzB,GAAD,MAAY,CACxBsB,OACA1C,KAAK,GAAD,mBAAMoB,EAAMpB,MAAZ,YAAqB0C,EAAK1C,WAEhC,EAAKgD,yBAEP,MAAOM,GACPC,QAAQC,IAAIF,GACZG,MAAMH,K,EAIVI,oBAAsB,SAAChE,EAAKJ,GAC1B,EAAKuD,SAAS,CAAEjB,cAAe,CAAElC,MAAKJ,U,EAGxC0D,oBAAsB,WACpB,EAAKH,SAAS,CAAEF,eAAgB,EAAKvB,MAAMuB,iB,EAG7CgB,iBAAmB,WAEjB,EAAKd,SAAS,CAAEjB,cAAe,MAAQ2B,QAAQC,IAAR,oBAAyB,EAAKpC,MAAMQ,kB,EAG7EgC,OAAS,WACPC,KAAMC,KAAK,kDAAmD,CAC5DC,MAAO,a,wDA/EX,SAAmBC,EAAWC,GAC5B,MAAmDC,KAAK9C,MAAhDG,EAAR,EAAQA,KAAMmB,EAAd,EAAcA,KAAM1C,EAApB,EAAoBA,KAAM4B,EAA1B,EAA0BA,cAAeN,EAAzC,EAAyCA,MACnC6C,EACJ5C,IAAS0C,EAAU1C,MAAQK,IAAkBqC,EAAUrC,cACnDwC,EACJpE,EAAKqE,SAAW3B,EAAK4B,WACH,OAAlB1C,GACAN,IAAU2C,EAAU3C,MAGlB6C,IACFZ,QAAQC,IAAR,eAAoBU,KAAK9C,MAAMQ,gBAC/BK,OAAOsC,SAAS,CACdC,IAAKrC,SAASsC,gBAAgBC,aAC9BC,SAAU,YAIVP,GACFhB,WAAWc,KAAKN,OAAQ,O,oBAgE5B,WAEE,MAAqDM,KAAK9C,MAAlDpB,EAAR,EAAQA,KAAM2C,EAAd,EAAcA,cAAef,EAA7B,EAA6BA,cAAec,EAA5C,EAA4CA,KACtCkC,EACJ5E,EAAKqE,OAAS,KAAO1B,GAAiB3C,EAAKqE,OAAS3B,EAAK4B,UAE3D,OACE,eAAC9B,GAAD,WACE,cAAC,KAAD,CAAgBqC,SAAS,gBAAgBC,UAAU,QACnD,cAAC,EAAD,CAAWrG,SAAUyF,KAAKzF,SAAUD,SAAU0F,KAAKtB,cACnD,cAAC,EAAD,CACE5C,KAAMA,EACNC,QAAS0C,EACTzC,SAAUgE,KAAKR,sBAEhBkB,GAAQ,cAAC,EAAD,CAAQrF,QAAS2E,KAAKf,WAC9BvB,GACC,cAAC,EAAD,CACEA,cAAeA,EACfC,WAAYqC,KAAKP,0B,GAhHXoB,aAwHHtC,MC7HfuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF/C,SAASgD,eAAe,W","file":"static/js/main.55b43e2b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: red;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  line-height: 50px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport { SearchForm, Header, Button, Label, Input };\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, SearchForm, Button, Label, Input } from \"./Searchbar.styled\";\n\nfunction Searchbar({ onChange, onSubmit }) {\n\n  return (\n    <Fragment>\n      <Header>\n        <SearchForm onSubmit={onSubmit}>\n          <Button type=\"submit\">\n            <Label>Search</Label>\n          </Button>\n\n          <Input\n            className=\"SearchForm-input\"\n            id=\"textInput\"\n            type=\"text\"\n            onChange={onChange}\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </SearchForm>\n      </Header>\n    </Fragment>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styled from \"@emotion/styled\";\n\nconst Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nconst Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport { Image, Item };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Image, Item } from \"./ImageGalleryItem.styled\";\n\nfunction ImageGalleryItem(p) {\n  const { alt, onClick, largeImageURL } = p;\n\n  return (\n    <Fragment>\n      <Item>\n        <Image\n          onClick={(e) => onClick(largeImageURL, alt)}\n          src={largeImageURL}\n          alt={alt}\n        />\n      </Item>\n    </Fragment>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import styled from \"@emotion/styled\";\n\nconst Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  /* margin-bottom: 0; */\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Spinner = styled.div`\n  text-align: center;\n`;\nexport { Gallery, Spinner };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { Gallery, Spinner } from \"./ImageGallery.styled\";\n\nfunction ImageGallery(p) {\n  const { hits, visible, onSelect } = p;\n\n  return (\n    <>\n      <Gallery>\n        {hits.map(({ webformatURL, tags, largeImageURL, id }) => (\n          <ImageGalleryItem\n            onClick={onSelect}\n            key={`${id}+${webformatURL}`}\n            largeImageURL={largeImageURL}\n            src={webformatURL}\n            alt={tags}\n          />\n        ))}\n      </Gallery>\n\n      {visible && (\n        <Spinner>\n          <Loader\n            // visible={visible}\n            type=\"ThreeDots\"\n            color=\"Orange\"\n            height={100}\n            width={100}\n            timeout={7000}\n          />\n        </Spinner>\n      )}\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  visible: PropTypes.bool.isRequired,\n  hits: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import styled from \"@emotion/styled\";\n\nconst LoadButton = styled.button`\n  padding: 8px 16px;\n  margin: 0 auto;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n\nexport { LoadButton };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LoadButton } from \"./Button.styled\";\n\nfunction Button(p) {\n  return (\n    <LoadButton type=\"button\" onClick={p.onClick}>\n      Load more\n    </LoadButton>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import axios from \"axios\";\n\nconst URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"22788715-8437fcb04a405122d442af916\";\n\naxios.defaults.baseURL = URL;\naxios.defaults.params = {\n  key: API_KEY,\n  per_page: 12,\n  image_type: \"photo\",\n  orientation: \"horizontal\",\n};\n\nconst fetchData = async (state) => {\n  const { query, page } = state;\n\n  return await axios(\"\", {\n    params: { q: query, page },\n  });\n};\n\nexport default fetchData;\n\n// Your API key: 22788715-8437fcb04a405122d442af916","import styled from \"@emotion/styled\";\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nconst ModalEl = styled.div`\n  /* position: absolute; */\n  padding: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 75vw;\n  height: 50vh;\n`;\n\nexport { Overlay, ModalEl };\n","import PropTypes from \"prop-types\";\nimport { Overlay, ModalEl } from \"./Modal.styled\";\nimport { useEffect, useCallback } from \"react\";\n\nfunction Modal({ selectedImage, closeModal }) {\n\n  \n\n const handleKeyPress = useCallback((e) => {\n    if (e.key === \"Escape\") {\n      closeModal();\n    }\n  }, [closeModal]);\n\n\n\n  useEffect(() => {\n      window.addEventListener(\"keydown\", handleKeyPress);\n      document.body.className = \"noScrollWhileModal\";\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyPress);\n      document.body.className = \"\";\n    }\n  }, [handleKeyPress])\n\n\n  \n  // componentDidMount() {\n  //   if (selectedImage !== null) {\n  //     window.addEventListener(\"keydown\", handleKeyPress);\n  //     document.body.className = \"noScrollWhileModal\";\n  //   }\n  // }\n\n  // componentWillUnmount() {\n  //   window.removeEventListener(\"keydown\", handleKeyPress);\n  //   document.body.className = \"\";\n  // }\n\n\n\n\n\n const handleOverlayClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      closeModal();\n    }\n  };\n\n    const { src, alt } = selectedImage;\n    return (\n      <Overlay onClick={handleOverlayClick}>\n        <ModalEl>\n          <img src={src} alt={alt} />\n        </ModalEl>\n      </Overlay>\n    );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  selectedImage: PropTypes.object,\n};\n\nexport default Modal;\n","import styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  padding-bottom: 24px;\n`;\nexport { Container };\n","import { Component } from \"react\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\nimport ImageGallery from \"../../components/ImageGallery/ImageGallery\";\nimport Button from \"../../components/Button/Button\";\nimport fetchData from \"../../API/fetchData\";\nimport Modal from \"../Modal/Modal\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Container } from \"./App.styled\";\n\nclass App extends Component {\n  state = {\n    data: {},\n    hits: [],\n    query: \"\",\n    page: 1,\n    selectedImage: null,\n    loaderVisible: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { page, data, hits, selectedImage, query } = this.state;\n    const ruleForScrollTo =\n      page !== prevState.page || selectedImage !== prevState.selectedImage;\n    const ruleForNotify =\n      hits.length === data.totalHits &&\n      selectedImage === null &&\n      query === prevState.query;\n\n\n    if (ruleForScrollTo) {\n      console.log(`wow  ${this.state.selectedImage}`);\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n\n    if (ruleForNotify) {\n      setTimeout(this.notify, 3000);\n    }\n  }\n\n  handleInput = (e) => {\n    this.setState({ query: e.target.value });\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n\n    this.toggleLoaderVisible();\n    e.target.textInput.value = \"\";\n\n    this.setState({ page: 1, hits: [] }, () => {\n      this.handleFetchResponse();\n    });\n  };\n\n  loadMore = (e) => {\n    this.toggleLoaderVisible();\n    setTimeout(\n      this.setState({ page: this.state.page + 1 }, () => {\n        this.handleFetchResponse();\n      }),\n      2000\n    );\n  };\n\n  handleFetchResponse = () => {\n    try {\n      fetchData(this.state).then(({ data }) => {\n        // console.log(data);\n        this.setState((state) => ({\n          data,\n          hits: [...state.hits, ...data.hits],\n        }));\n        this.toggleLoaderVisible();\n      });\n    } catch (error) {\n      console.log(error);\n      alert(error);\n    }\n  };\n\n  handleSelectedImage = (src, alt) => {\n    this.setState({ selectedImage: { src, alt } });\n  };\n\n  toggleLoaderVisible = () => {\n    this.setState({ loaderVisible: !this.state.loaderVisible });\n  };\n\n  handleCloseModal = () => {\n    \n    this.setState({ selectedImage: null }, console.log(`close me, ${this.state.selectedImage}`));\n  };\n\n  notify = () => {\n    toast.warn(\"There are no more images that fit to your query\", {\n      theme: \"colored\",\n    });\n  };\n\n  render() {\n    // console.log(`shit, ${this.state.selectedImage}`);\n    const { hits, loaderVisible, selectedImage, data } = this.state;\n    const rule =\n      hits.length > 11 && !loaderVisible && hits.length < data.totalHits;\n\n    return (\n      <Container>\n        <ToastContainer position=\"bottom-center\" autoClose=\"off\" />\n        <Searchbar onSubmit={this.onSubmit} onChange={this.handleInput} />\n        <ImageGallery\n          hits={hits}\n          visible={loaderVisible}\n          onSelect={this.handleSelectedImage}\n        />\n        {rule && <Button onClick={this.loadMore} />}\n        {selectedImage && (\n          <Modal\n            selectedImage={selectedImage}\n            closeModal={this.handleCloseModal}\n          />\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}