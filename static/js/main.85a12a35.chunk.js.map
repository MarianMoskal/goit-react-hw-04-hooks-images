{"version":3,"sources":["components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","API/fetchData.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/App/App.styled.jsx","components/App/App.jsx","index.js"],"names":["SearchForm","styled","form","Header","header","Button","button","Label","label","Input","input","Searchbar","onSubmit","type","className","id","autoComplete","autoFocus","placeholder","Image","img","Item","li","ImageGalleryItem","alt","onClick","largeImageURL","e","src","Gallery","ul","Spinner","div","ImageGallery","hits","visible","onSelect","onScroll","map","webformatURL","tags","color","height","width","timeout","LoadButton","axios","defaults","baseURL","params","key","per_page","image_type","orientation","fetchData","query","page","a","q","Overlay","ModalEl","Modal","selectedImage","closeModal","handleKeyPress","useCallback","useEffect","window","addEventListener","document","body","removeEventListener","target","nodeName","Container","App","useState","setPage","setHits","setQuery","totalHits","setTotalHits","setSelectedImage","loaderVisible","setLoaderVisible","toggleLoaderVisible","prevLoaderVisible","handleScroll","node","scrollingElement","scrollHeight","scrollTop","clientHeight","length","notify","debounce","scrollTo","top","documentElement","behavior","trim","setTimeout","then","data","ruleForNotify","prevHits","error","console","log","alert","toast","warn","theme","rule","position","autoClose","limit","preventDefault","textInput","value","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.85a12a35.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst Header = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: red;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nconst Label = styled.label`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nconst Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  line-height: 50px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport { SearchForm, Header, Button, Label, Input };\n","import { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Header, SearchForm, Button, Label, Input } from \"./Searchbar.styled\";\n\nfunction Searchbar({ onSubmit }) {\n  return (\n    <Fragment>\n      <Header>\n        <SearchForm onSubmit={onSubmit}>\n          <Button type=\"submit\">\n            <Label>Search</Label>\n          </Button>\n\n          <Input\n            className=\"SearchForm-input\"\n            id=\"textInput\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </SearchForm>\n      </Header>\n    </Fragment>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import styled from \"@emotion/styled\";\n\nconst Image = styled.img`\n  width: 100%;\n  height: 260px;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nconst Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport { Image, Item };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Image, Item } from \"./ImageGalleryItem.styled\";\n\nfunction ImageGalleryItem({ alt, onClick, largeImageURL }) {\n\n  return (\n    <Fragment>\n      <Item>\n        <Image\n          onClick={(e) => onClick(largeImageURL, alt)}\n          src={largeImageURL}\n          alt={alt}\n        />\n      </Item>\n    </Fragment>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  alt: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import styled from \"@emotion/styled\";\n\nconst Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  /* margin-bottom: 0; */\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Spinner = styled.div`\n  text-align: center;\n`;\nexport { Gallery, Spinner };\n","// import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { Gallery, Spinner } from \"./ImageGallery.styled\";\n\nfunction ImageGallery({ hits, visible, onSelect, onScroll }) {\n\n  return (\n    <>\n      <Gallery>\n        {hits.map(({ webformatURL, tags, largeImageURL, id }) => (\n          <ImageGalleryItem\n            onClick={onSelect}\n            onScroll={onScroll}\n            key={`${id}+${webformatURL}`}\n            largeImageURL={largeImageURL}\n            src={webformatURL}\n            alt={tags}\n          />\n        ))}\n      </Gallery>\n\n      {visible && (\n        <Spinner>\n          <Loader\n            // visible={visible}\n            type=\"ThreeDots\"\n            color=\"Orange\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        </Spinner>\n      )}\n    </>\n  );\n}\n\nImageGallery.propTypes = {\n  onSelect: PropTypes.func.isRequired,\n  visible: PropTypes.bool.isRequired,\n  hits: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import styled from \"@emotion/styled\";\n\nconst LoadButton = styled.button`\n  padding: 8px 16px;\n  margin: 0 auto;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  &:hover,\n  :focus {\n    background-color: #303f9f;\n  }\n`;\n\nexport { LoadButton };\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LoadButton } from \"./Button.styled\";\n\nfunction Button({onClick}) {\n  return (\n    <LoadButton type=\"button\" onClick={onClick}>\n      Load more\n    </LoadButton>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import axios from \"axios\";\n\nconst URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"22788715-8437fcb04a405122d442af916\";\n\naxios.defaults.baseURL = URL;\naxios.defaults.params = {\n  key: API_KEY,\n  per_page: 12,\n  image_type: \"photo\",\n  orientation: \"horizontal\",\n};\n\nconst fetchData = async ( query, page ) => {\n\n  return await axios(\"\", {\n    params: { q: query, page },\n  });\n};\n\nexport default fetchData;\n\n// Your API key: 22788715-8437fcb04a405122d442af916\n","import styled from \"@emotion/styled\";\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 1200;\n`;\n\nconst ModalEl = styled.div`\n  /* position: absolute; */\n  padding: 70px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 75vw;\n  height: 50vh;\n`;\n\nexport { Overlay, ModalEl };\n","import PropTypes from \"prop-types\";\nimport { Overlay, ModalEl } from \"./Modal.styled\";\nimport { useEffect, useCallback } from \"react\";\n\nfunction Modal({ selectedImage:{src, alt}, closeModal }) {\n\n  const handleKeyPress = useCallback((e) => {\n      if (e.key === \"Escape\") {\n        closeModal();\n      }\n    },[closeModal]\n  );\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyPress);\n    document.body.className = \"noScrollWhileModal\";\n      return () => {\n        window.removeEventListener(\"keydown\", handleKeyPress);\n        document.body.className = \"\";\n      };\n  }, [handleKeyPress]);\n\n\n  const handleOverlayClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      closeModal();\n    }\n  };\n\n\n  return (\n    <Overlay onClick={handleOverlayClick}>\n      <ModalEl>\n        <img src={src} alt={alt} />\n      </ModalEl>\n    </Overlay>\n  );\n}\n\nModal.propTypes = {\n  closeModal: PropTypes.func.isRequired,\n  selectedImage: PropTypes.object,\n};\n\nexport default Modal;\n","import styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n  padding-bottom: 24px;\n`;\nexport { Container };\n","import { useState, useEffect, useCallback } from \"react\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\nimport ImageGallery from \"../../components/ImageGallery/ImageGallery\";\nimport Button from \"../../components/Button/Button\";\nimport fetchData from \"../../API/fetchData\";\nimport Modal from \"../Modal/Modal\";\nimport { debounce } from \"debounce\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Container } from \"./App.styled\";\n\nfunction App() {\n  const [page, setPage] = useState(1);\n  const [hits, setHits] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [totalHits, setTotalHits] = useState(0);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [loaderVisible, setLoaderVisible] = useState(false);\n\n\n  const toggleLoaderVisible = () => {\n    setLoaderVisible(prevLoaderVisible => !prevLoaderVisible);\n  };\n\n  const handleScroll = useCallback((e) => {\n    const node = e.target.scrollingElement;\n    const bottom = node.scrollHeight - node.scrollTop === node.clientHeight;\n    const ruleForNotify = bottom && hits.length === totalHits && hits.length !== 0;\n\n      if (ruleForNotify) {\n        return notify();\n      }\n  }, [hits, totalHits]);\n\n\n  useEffect(() => {\n      window.addEventListener(\"scroll\", debounce(handleScroll, 300));\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n  }}, [handleScroll])\n\n\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  }, [page, selectedImage]);\n\n\n\n  useEffect(() => {\n    if (query.trim() !== \"\") {\n      try {\n        setTimeout(() => {\n          fetchData(query, page)\n            .then(({ data }) => {\n\n            const ruleForNotify = data.hits.length !== 0 &&\n              data.hits.length === data.totalHits;\n\n            setTotalHits(data.totalHits);\n            setHits(prevHits => [...prevHits, ...data.hits]);\n              if (ruleForNotify) {notify()}\n            })\n          toggleLoaderVisible()\n        }, 1000);\n      }\n      catch (error) {\n        console.log(error);\n        alert(error);\n      }\n    }\n  }, [page, query]);\n  \n\n\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    \n    toggleLoaderVisible();\n\n    setPage(1);\n    setHits([]);\n    setQuery(e.target.textInput.value);\n\n    e.target.textInput.value = \"\";\n  };\n\n\n  const loadMore = (e) => {\n    toggleLoaderVisible();\n    setPage(page + 1);\n  };\n\n\n  const  handleSelectedImage = (src, alt) => {\n    setSelectedImage({ src, alt });\n  };\n\n\n  const handleCloseModal = () => {\n    setSelectedImage(null);\n  };\n\n  const notify = () => {\n    toast.warn(\"There are no more images that fit to your query\", {\n      theme: \"colored\",\n    });\n  };\n\n  const rule =\n    hits.length > 11 && !loaderVisible && hits.length < totalHits;\n\n  return (\n    <Container>\n      <ToastContainer position=\"top-center\" autoClose=\"off\" limit={1}/>\n      <ToastContainer position=\"bottom-center\" autoClose=\"off\" limit={1}/>\n      <Searchbar onSubmit={onSubmit} />\n      <ImageGallery\n        hits={hits}\n        visible={loaderVisible}\n        onSelect={handleSelectedImage}\n        onScroll={handleScroll}\n      />\n      {rule && <Button onClick={loadMore} />}\n      {selectedImage && (\n        <Modal\n          selectedImage={selectedImage}\n          closeModal={handleCloseModal}\n        />\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}